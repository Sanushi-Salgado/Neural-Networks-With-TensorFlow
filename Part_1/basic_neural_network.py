# -*- coding: utf-8 -*-
"""Basic_Neural_Network.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qr_13Q9oDn2Wf32xVZnEznFpLem9Cepd

1. Import libraries
"""

import tensorflow as tf
import numpy as np
from tensorflow import keras

"""2. Create the simplest possible neural network. It has one layer, that layer has one neuron, and the input shape to it is, only one value."""

model = tf.keras.Sequential([keras.layers.Dense(units=1, input_shape=[1])])

"""3. Tell the model to use mean_squared_error for the loss and stochastic gradient descent (sgd) for the optimizer."""

model.compile(optimizer='sgd', loss='mean_squared_error')

"""4. Input data to the model. Here we have to feed the model both inputs & the respective outputs for each of the inputs. Because during the training process, the model will infer patterns or rules, based on those inputs & outputs that we enter to the model."""

# Inputs
xs = np.array([-1.0, 0.0, 1.0, 2.0, 3.0, 4.0], dtype=float)

# Outputs 
ys = np.array([-2.0, 1.0, 4.0, 7.0, 10.0, 13.0], dtype=float)

"""5. Train the neural network"""

model.fit(xs, ys, epochs=500)

"""6. Make predictions using the trained model. Now the model has been trained, and it has inferred the rules from the data that we provided. So now you can make predictions using the trained model."""

print(model.predict([10.0]))