# -*- coding: utf-8 -*-
"""Lab2-Computer-Vision.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DMMd09QDGj574p6dUWceQiw0_3ti-vr2

1. Import libraries
"""

import tensorflow as tf
print(tf.__version__)

"""2. Load the Fashion MNIST dataset"""

mnist = tf.keras.datasets.fashion_mnist

"""3. Get training & testing data, training & testing labels"""

(training_images, training_labels), (test_images, test_labels) = mnist.load_data()

"""4. Analyze the dataset"""

import matplotlib.pyplot as plt
print(training_labels[0])

# Plot the image graphically
plt.imshow(training_images[0])

# This will print the pixels of the image
print(training_images[0])

"""5. Normalizing numeric values"""

training_images  = training_images / 255.0
test_images = test_images / 255.0

# Now you will be able to see the effect of normalization - all the values will be between 0 & 1
print(training_images[0])

"""6. Implement the model - i.e. the neural network"""

model = tf.keras.models.Sequential([tf.keras.layers.Flatten(), 
                                    tf.keras.layers.Dense(128, activation=tf.nn.relu), 
                                    tf.keras.layers.Dense(10, activation=tf.nn.softmax)])

"""7. Train the model"""

model.compile(optimizer = 'Adam',
              loss = 'sparse_categorical_crossentropy',
              metrics=['accuracy'])

# Train the neural network
model.fit(training_images, training_labels, epochs=5)

"""8. Test the model"""

model.evaluate(test_images, test_labels)

classifications = model.predict(test_images)
print(classifications[0])

print(test_labels[0])